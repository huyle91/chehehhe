name: Deploy Production

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.0

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Debug lock file
        run: |
          echo "Current Directory: $(pwd)"
          ls -la
          if [ -f pnpm-lock.yaml ]; then
            echo "pnpm-lock.yaml found"
          else
            echo "pnpm-lock.yaml not found"
            exit 1
          fi

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Create .env file
        run: echo "${{secrets.ENV_PRODUCTION}}" > .env

      - name: Install dependencies
        run: pnpm install --force

      - name: Build the project
        run: pnpm build
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_PRODUCTION }}
          username: ${{ secrets.USERNAME_PRODUCTION }}
          password: ${{ secrets.PASSWORD_PRODUCTION }}
          port: ${{ secrets.PORT_PRODUCTION }}
          script: |
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            cd ~/QR_Ordering_System-Frontend
            git fetch --all
            git reset --hard origin/main
            echo "${{secrets.ENV_PRODUCTION}}" > .env
            pnpm install --force
            pnpm build
            pm2 restart Client
